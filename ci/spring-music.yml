resources:
- name: music-repo
  type: git
  source:
    uri: git@github.com:datianshi/spring-music.git
    branch: master
    private_key: {{music_private_key}}

- name: version
  type: semver
  source:
    bucket: music-pipeline-artifacts
    key: current-version
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    initial_version: 1.0.0

- name: music-rc-release
  type: s3
  source:
    bucket: music-pipeline-artifacts
    regexp: spring-music-(.*).war
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

- name: music-final-release
  type: s3
  source:
    bucket: music-release-artifacts
    regexp: spring-music-(.*).war
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

jobs:
- name: unit
  plan:
  - get: music-repo
    trigger: true
  - task: unit
    file: music-repo/ci/tasks/unit.yml

- name: build-binary
  serial: true
  plan:
  - get: music-repo
    passed: [unit]
    trigger: true
  - get: version
    params: {bump: minor, pre: rc}
  - task: build-artifact
    file: music-repo/ci/tasks/build-artifact.yml
  - put: music-rc-release
    params: {from: music-repo/build/libs/spring-music-.*.war}
  - put: version
    params: {file: version/number}

- name: cats
  plan:
  - aggregate:
    - get: music-rc-release
      passed: [build-binary]
      trigger: true
    - get: music-repo
      passed: [build-binary]
      trigger: true
  - task: deploy-to-cats
    file: music-repo/ci/tasks/cf-deployment.yml
    config:
      params:
        API_ENDPOINT: api.10.65.233.228.xip.io
        USERNAME: admin
        PASSWORD: admin
        ORG: test-org
        SPACE: cats
        HOST: music-cats
  - task: cats
    file: music-repo/ci/tasks/cats.yml
    config:
      params:
        MUSIC_URL: http://music-cats.10.65.233.228.xip.io

- name: promote-to-uat
  plan:
  - aggregate:
    - get: music-rc-release
      passed: [cats]
      trigger: true
    - get: music-repo
      passed: [cats]
      trigger: true
  - task: deploy-to-uat
    file: music-repo/ci/tasks/cf-deployment.yml
    config:
      params:
        API_ENDPOINT: api.10.65.233.228.xip.io
        USERNAME: admin
        PASSWORD: admin
        ORG: test-org
        SPACE: uat
        HOST: music-uat

- name: manual-deploy-to-prod
  plan:
  - aggregate:
    - get: music-rc-release
      passed: [promote-to-uat]
    - get: music-repo
      passed: [promote-to-uat]
    - get: version
      params: {bump: final}
  - task: deploy-to-prod
    file: music-repo/ci/tasks/cf-deployment.yml
    config:
      params:
        API_ENDPOINT: api.10.65.233.228.xip.io
        USERNAME: admin
        PASSWORD: admin
        ORG: test-org
        SPACE: prod
        HOST: music
  - put: music-final-release
    params: {from: music-rc-release/spring-music-.*.war}
  - put: version
    params: {from: version/number}
